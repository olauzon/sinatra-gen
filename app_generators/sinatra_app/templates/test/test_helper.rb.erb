<%- if vendor -%>
$:.unshift File.join(File.dirname(__FILE__), '..', 'vendor', 'sinatra', 'lib')
<%- end -%>
require 'sinatra'
require 'rack/test'

require File.join(File.dirname(__FILE__), '..', <%- unless tiny -%>'lib', <%- end -%>'<%= app_name %>.rb')

<%= app_klass -%>.set(
  :environment => :test,
  :run => false,
  :raise_errors => true,
  :logging => false
)

module TestHelper
  
  def app
    # change to your app class if using the 'classy' style
    Sinatra::Application.new
  end
  
  def body
    last_response.body
  end
  
  def status
    last_response.status
  end
  
  include Rack::Test::Methods

end

<%- case test_framework  -%>
<%- when 'rspec' -%>
require 'spec'
require 'spec/interop/test'

Spec::Runner.configure do |config|
  include TestHelper
end
<%- when 'bacon' -%>
require 'bacon'

Bacon::Context.send(:include, TestHelper)
<%- when 'spec' -%>
require 'test/spec'
<%- when 'shoulda' -%>
require 'test/unit'
require 'shoulda'

Test::Unit::TestCase.send(:include, TestHelper)
<%- when 'unit' -%>
require 'test/unit'

Test::Unit::TestCase.send(:include, TestHelper)
<%- end -%>
